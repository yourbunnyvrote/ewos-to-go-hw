// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/user/sign-up": {
            "post": {
                "description": "Creates a new user account based on the provided user data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User object for registration",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RegistrationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User successfully registered",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Create user error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "JSON encoding error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/messages/private": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Retrieves private chat messages with pagination support",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Get private chat messages",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit number for pagination (positive integer)",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Start number for pagination (positive integer)",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Username of the message receiver",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of private messages",
                        "schema": {
                            "$ref": "#/definitions/response.ShowPrivateMessagesResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid paginate parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Missing or invalid API key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "There is no dialog with such a person",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "JSON encoding error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Sends a private chat message to a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Send a private chat message",
                "parameters": [
                    {
                        "description": "Text message object for sending private message",
                        "name": "text",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SendPrivateMessageRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Username of the message receiver",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message successfully sent",
                        "schema": {
                            "$ref": "#/definitions/response.SendPrivateMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request: Send private message error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Missing or invalid API key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "JSON encoding error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/messages/private/users": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Retrieves a list of users who have sent private messages to the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Get users with received private messages",
                "responses": {
                    "200": {
                        "description": "List of usernames with received private messages",
                        "schema": {
                            "$ref": "#/definitions/response.ShowUsersWithMessagesResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Missing or invalid API key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "JSON encoding error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/messages/public": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Retrieves public chat messages with pagination support",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Get public chat messages",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit number for pagination (positive integer)",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Start number for pagination (positive integer)",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of public messages",
                        "schema": {
                            "$ref": "#/definitions/response.ShowPublicMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid paginate parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Missing or invalid API key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Bad Request: Get public messages error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Sends a public chat message using the provided text content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Send a public chat message",
                "parameters": [
                    {
                        "description": "Text message object for sending public message",
                        "name": "text",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SendPublicMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message successfully sent",
                        "schema": {
                            "$ref": "#/definitions/response.SendPublicMessagesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request: Send public message error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Missing or invalid API key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "JSON encoding error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entities.Message": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.RegistrationRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.SendPrivateMessageRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "request.SendPublicMessageRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "response.SendPrivateMessageResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "response.SendPublicMessagesResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "$ref": "#/definitions/entities.Message"
                }
            }
        },
        "response.ShowPrivateMessagesResponse": {
            "type": "object",
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Message"
                    }
                }
            }
        },
        "response.ShowPublicMessageResponse": {
            "type": "object",
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Message"
                    }
                }
            }
        },
        "response.ShowUsersWithMessagesResponse": {
            "type": "object",
            "properties": {
                "usernames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Chat API",
	Description:      "API Server for Chat Application",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
