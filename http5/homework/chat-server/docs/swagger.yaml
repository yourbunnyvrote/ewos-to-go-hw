basePath: /
definitions:
  entities.Message:
    properties:
      content:
        type: string
      username:
        type: string
    type: object
  request.RegistrationRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  request.SendPrivateMessageRequest:
    properties:
      content:
        type: string
    required:
    - content
    type: object
  request.SendPublicMessageRequest:
    properties:
      content:
        type: string
    required:
    - content
    type: object
  response.SendPrivateMessageResponse:
    properties:
      content:
        type: string
      username:
        type: string
    type: object
  response.SendPublicMessagesResponse:
    properties:
      message:
        $ref: '#/definitions/entities.Message'
    type: object
  response.ShowPrivateMessagesResponse:
    properties:
      messages:
        items:
          $ref: '#/definitions/entities.Message'
        type: array
    type: object
  response.ShowPublicMessageResponse:
    properties:
      messages:
        items:
          $ref: '#/definitions/entities.Message'
        type: array
    type: object
  response.ShowUsersWithMessagesResponse:
    properties:
      usernames:
        items:
          type: string
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  description: API Server for Chat Application
  title: Chat API
  version: "1.0"
paths:
  /v1/auth/sign-up:
    post:
      consumes:
      - application/json
      description: Creates a new user account based on the provided user data
      parameters:
      - description: User object for registration
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.RegistrationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User successfully registered
          schema:
            type: string
        "400":
          description: Create user error
          schema:
            type: string
        "500":
          description: JSON encoding error
          schema:
            type: string
      summary: Register a new user
      tags:
      - user
  /v1/messages/private:
    get:
      consumes:
      - application/json
      description: Retrieves private chat messages with pagination support
      parameters:
      - description: Limit number for pagination (positive integer)
        in: query
        name: limit
        required: true
        type: integer
      - description: Start number for pagination (positive integer)
        in: query
        name: offset
        required: true
        type: integer
      - description: Username of the message receiver
        in: query
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of private messages
          schema:
            $ref: '#/definitions/response.ShowPrivateMessagesResponse'
        "400":
          description: Invalid paginate parameters
          schema:
            type: string
        "401":
          description: 'Unauthorized: Missing or invalid API key'
          schema:
            type: string
        "404":
          description: There is no dialog with such a person
          schema:
            type: string
        "500":
          description: JSON encoding error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Get private chat messages
      tags:
      - messages
    post:
      consumes:
      - application/json
      description: Sends a private chat message to a specific user
      parameters:
      - description: Text message object for sending private message
        in: body
        name: text
        required: true
        schema:
          $ref: '#/definitions/request.SendPrivateMessageRequest'
      - description: Username of the message receiver
        in: query
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Message successfully sent
          schema:
            $ref: '#/definitions/response.SendPrivateMessageResponse'
        "400":
          description: 'Bad Request: Send private message error'
          schema:
            type: string
        "401":
          description: 'Unauthorized: Missing or invalid API key'
          schema:
            type: string
        "500":
          description: JSON encoding error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Send a private chat message
      tags:
      - messages
  /v1/messages/private/users:
    get:
      consumes:
      - application/json
      description: Retrieves a list of users who have sent private messages to the
        authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: List of usernames with received private messages
          schema:
            $ref: '#/definitions/response.ShowUsersWithMessagesResponse'
        "401":
          description: 'Unauthorized: Missing or invalid API key'
          schema:
            type: string
        "500":
          description: JSON encoding error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Get users with received private messages
      tags:
      - messages
  /v1/messages/public:
    get:
      consumes:
      - application/json
      description: Retrieves public chat messages with pagination support
      parameters:
      - description: Limit number for pagination (positive integer)
        in: query
        name: limit
        required: true
        type: integer
      - description: Start number for pagination (positive integer)
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of public messages
          schema:
            $ref: '#/definitions/response.ShowPublicMessageResponse'
        "400":
          description: Invalid paginate parameters
          schema:
            type: string
        "401":
          description: 'Unauthorized: Missing or invalid API key'
          schema:
            type: string
        "500":
          description: 'Bad Request: Get public messages error'
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Get public chat messages
      tags:
      - messages
    post:
      consumes:
      - application/json
      description: Sends a public chat message using the provided text content
      parameters:
      - description: Text message object for sending public message
        in: body
        name: text
        required: true
        schema:
          $ref: '#/definitions/request.SendPublicMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Message successfully sent
          schema:
            $ref: '#/definitions/response.SendPublicMessagesResponse'
        "400":
          description: 'Bad Request: Send public message error'
          schema:
            type: string
        "401":
          description: 'Unauthorized: Missing or invalid API key'
          schema:
            type: string
        "500":
          description: JSON encoding error
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Send a public chat message
      tags:
      - messages
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
